name: Build and Push Docker Images

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to build for'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production
  push:
    branches:
      - main
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./shader-playground
        file: ./shader-playground/Dockerfile
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend:${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend:${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push embedding service image
      uses: docker/build-push-action@v5
      with:
        context: ./embedding-service
        file: ./embedding-service/Dockerfile
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-embedding:${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Generate deployment manifests
      run: |
        mkdir -p deployment
        cat > deployment/docker-compose.deploy.yml << EOF
        version: '3.8'
        services:
          frontend:
            image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend:${{ github.sha }}
            ports:
              - "80:80"
            depends_on:
              - backend
              - embedding-service
            restart: unless-stopped

          backend:
            image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend:${{ github.sha }}
            environment:
              - NODE_ENV=${{ github.event.inputs.environment || 'staging' }}
            restart: unless-stopped

          embedding-service:
            image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-embedding:${{ github.sha }}
            environment:
              - NODE_ENV=${{ github.event.inputs.environment || 'staging' }}
            restart: unless-stopped
        EOF

    - name: Upload deployment artifacts
      uses: actions/upload-artifact@v4
      with:
        name: deployment-manifests
        path: deployment/