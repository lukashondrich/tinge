name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install root dependencies
      run: npm install
    
    - name: Install backend dependencies
      run: |
        cd backend
        npm install
    
    - name: Install frontend dependencies
      run: |
        cd shader-playground
        npm install
    
    - name: Install embedding service dependencies
      run: |
        cd embedding-service
        npm install
    
    - name: Run backend linting
      run: |
        cd backend
        if grep -q "lint" package.json; then
          timeout 300 npm run lint || echo "Backend linting timed out"
        else
          echo "No linting script found in backend"
        fi
      continue-on-error: true
    
    - name: Run frontend linting
      run: |
        cd shader-playground
        if grep -q "lint" package.json; then
          timeout 300 npm run lint || echo "Frontend linting timed out"
        else
          echo "No linting script found in frontend"
        fi
    
    - name: Run backend tests
      run: |
        cd backend
        if grep -q "test" package.json; then
          npm test
        else
          echo "No test script found in backend"
        fi
    
    - name: Run frontend tests
      run: |
        cd shader-playground
        if grep -q "test" package.json; then
          npm run test:run
        else
          echo "No test script found in frontend"
        fi
    
    - name: Run embedding service tests
      run: |
        cd embedding-service
        if grep -q "test" package.json; then
          npm test
        else
          echo "No test script found in embedding service"
        fi
    
    - name: Run integration tests
      run: |
        if grep -q "test:integration" package.json; then
          npm run test:integration
        else
          echo "No integration tests found"
        fi
    
    - name: Build frontend
      run: |
        cd shader-playground
        npm run build
    
    - name: Test Docker builds
      run: |
        # Retry Docker builds up to 3 times to handle transient network issues
        for i in 1 2 3; do
          echo "Docker build attempt $i"
          if docker compose -f docker-compose.yml build --no-cache; then
            echo "Docker build succeeded on attempt $i"
            break
          else
            echo "Docker build failed on attempt $i"
            if [ $i -eq 3 ]; then
              echo "All Docker build attempts failed"
              exit 1
            fi
            echo "Retrying in 30 seconds..."
            sleep 30
          fi
        done

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install
    
    - name: Run security audit
      run: npm audit --audit-level=high
      continue-on-error: true
    
    - name: Check for vulnerabilities in backend
      run: |
        cd backend
        npm audit --audit-level=high || echo "Backend vulnerabilities found but continuing"
      continue-on-error: true
    
    - name: Check for vulnerabilities in frontend
      run: |
        cd shader-playground
        npm audit --audit-level=high || echo "Frontend vulnerabilities found but continuing"
      continue-on-error: true
    
    - name: Check for vulnerabilities in embedding service
      run: |
        cd embedding-service
        npm audit --audit-level=high || echo "Embedding service vulnerabilities found but continuing"
      continue-on-error: true