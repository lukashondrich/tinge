name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install root dependencies
      run: npm ci
    
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci
    
    - name: Install frontend dependencies
      run: |
        cd shader-playground
        npm ci
    
    - name: Install embedding service dependencies
      run: |
        cd embedding-service
        npm ci
    
    - name: Run linting
      run: |
        if [ -f package.json ] && grep -q "lint" package.json; then
          npm run lint
        fi
    
    - name: Run tests
      run: |
        if [ -f package.json ] && grep -q "test" package.json; then
          npm test
        fi
    
    - name: Build frontend
      run: |
        cd shader-playground
        npm run build
    
    - name: Test Docker builds
      run: |
        docker compose -f docker-compose.yml build --no-cache

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level=high
      continue-on-error: true
    
    - name: Check for vulnerabilities in backend
      run: |
        cd backend
        npm audit --audit-level=high
      continue-on-error: true
    
    - name: Check for vulnerabilities in frontend
      run: |
        cd shader-playground
        npm audit --audit-level=high
      continue-on-error: true
    
    - name: Check for vulnerabilities in embedding service
      run: |
        cd embedding-service
        npm audit --audit-level=high
      continue-on-error: true